#These are required for the ncr step
import operator as op
from functools import reduce
#This I stole from the internet; I didn't figure it out myself...I don't know what operator or functools are
def ncr(n, r):
    r = min(r, n-r)
    numer = reduce(op.mul, range(n, n-r, -1), 1)
    denom = reduce(op.mul, range(1, r+1), 1)
    return numer // denom

#row_entries figures out what goes in each row of Pascal's triangle
def row_entries(length):
    entries = []
    for i in range(0,length):
        entries.append(ncr((length)-1,i))
        i += 1
    print(entries)
    return entries

#Pascals_Triangle takes row_entries and assigns one per row
def Pascals_Triangle(rows):
    if int(rows):
        triangle_entries = []
        for j in range(1,rows + 1):
            triangle_entries.append(row_entries(j))
            j += 1
   #         str1 = " "
   #         for ele in triangle_entries:
   #             str1 += ele
   #     return (str1)
        return(triangle_entries)

    else:
        print("Please select an integer number of rows")

Pascals_Triangle(10)
